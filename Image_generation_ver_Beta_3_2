{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/suzukimain/image/blob/main/Image_generation_ver_Beta_3_2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#重要な注意点(Important Notes)：\n",
        " **・商用利用はご遠慮ください。**\n",
        "\n",
        " (Please do not use for commercial purposes.)\n",
        "\n",
        "**・画像生成によって起こった問題について、私は一切責任を負いません。**\n",
        "\n",
        "(I am not responsible for any problems caused by the image generation.)\n",
        "\n",
        "**・使用するにあたってはくれぐれも、自己責任でお願いします**\n",
        "\n",
        "(Please use at your own risk.)\n",
        "\n",
        "上記の内容と、最下部に記載されている利用規約に同意できない方は、本画像生成ブックの使用はご遠慮ください。\n",
        "\n",
        "(If you do not agree to the above contents and the terms of use listed at the bottom, please do not use this image generation book.)\n",
        "\n",
        "追記:\n",
        "本ノートブックを使用した時点で重要な注意点と、利用規約に同意したとみなします。\n",
        "\n",
        "(P.S. By using this notebook, you agree to the important notes and terms of use.)"
      ],
      "metadata": {
        "id": "fItLtfvvzFo8"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-lkrBClPxgaO"
      },
      "source": [
        "#1.ランタイムをGPUにしてください (1. Please set the runtime to GPU.)\n",
        "ランタイム>ランタイムのタイプを変更>Noneを押す>GPUを選択>決定\n",
        "\n",
        "(Runtime > Change runtime type > Select 'GPU' after clicking 'None' > Save)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2_TXXMSVDc5h",
        "outputId": "aa5018fe-aea1-45c5-f399-74972616fc22"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Keyword arguments {'clip_model': <function <lambda> at 0x7f9bfd8b0790>} are not expected by StableDiffusionPipeline and will be ignored.\n",
            "/usr/local/lib/python3.10/dist-packages/transformers/models/clip/feature_extraction_clip.py:28: FutureWarning: The class CLIPFeatureExtractor is deprecated and will be removed in version 5 of Transformers. Please use CLIPImageProcessor instead.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[32m画像生成の準備が出来たので、手順3に移ってください。\u001b[0m\n",
            "\u001b[32m(Now that the image generation is ready, please proceed to step 3.)\u001b[0m\n"
          ]
        }
      ],
      "source": [
        "#@title  { run: \"auto\", display-mode: \"code\" }\n",
        "# @markdown # 2.このコードを実行してください (2. Please run this code.)\n",
        "# @markdown 左の三角形が書いてあるボタンを押してください (Press the button with the triangle on the left.)\n",
        "\n",
        "\n",
        "#@markdown >モードの切り替え (mode change)\n",
        "mode_selection = \"quick\" #@param [\"quick\", \"Nomal\", \"high\", \"Full\"]\n",
        "#@markdown 生成時間が長くなるけど、より奇麗になります\n",
        "\n",
        "# @markdown ※モード切り替えをしたら再度実行して下さい\n",
        "\n",
        "# @markdown ダウンロードは5Gバイトぐらいありますが、正常です。\n",
        "# @markdown 仮想環境なのでそこまでデーター通信はかからないはずですが、**WI-FIに接続することを推奨します。**\n",
        "\n",
        "# @markdown (It is recommended to use this service while connected to Wi-Fi.)\n",
        "\n",
        "need_to_install = True # or False\n",
        "if need_to_install:\n",
        " !pip install torch diffusers transformers accelerate scipy safetensors  -q\n",
        " !pip install ftfy regex tqdm -q\n",
        " !pip install --upgrade git+https://github.com/Stability-AI/stablediffusion.git transformers accelerate scipy -q\n",
        " !pip install git+https://github.com/openai/CLIP.git -q\n",
        "\n",
        "import transformers\n",
        "import clip\n",
        "import os\n",
        "import pickle\n",
        "import torch\n",
        "import ipywidgets as widgets \n",
        "from PIL import Image\n",
        "from datetime import datetime \n",
        "from IPython.display import display \n",
        "from IPython.display import display, Markdown \n",
        "from diffusers import StableDiffusionPipeline, DPMSolverMultistepScheduler\n",
        "from transformers import GPT2Tokenizer, GPTNeoForCausalLM\n",
        "from transformers import pipeline, GPTNeoForCausalLM, AutoTokenizer\n",
        "\n",
        "device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n",
        "model, preprocess = clip.load(\"ViT-B/32\", device=device)\n",
        "\n",
        "# 使用するモデルを設定 \n",
        "model_id = \"stabilityai/stable-diffusion-2-1\"\n",
        "\n",
        "# モードの切り替え (mode change)\n",
        "mode_selection = \"Nomal\"\n",
        "if mode_selection == \"quick\":\n",
        "  dtype = torch.float8\n",
        "if mode_selection == \"Nomal\":\n",
        "  dtype = torch.float16\n",
        "if mode_selection == \"High\":\n",
        "  dtype = torch.float32\n",
        "if mode_selection == \"Full\":\n",
        "  dtype = torch.float64\n",
        "\n",
        "# StableDiffusion(メインのモジュール)パイプライン設定 \n",
        "# もしも何かあったら\"torch_dtype=torch.float16\"をつける\n",
        "pipe = StableDiffusionPipeline.from_pretrained(\n",
        "    model_id, torch_dtype=dtype,\n",
        "    clip_model=lambda x: model.encode_image(x).float(),\n",
        ")\n",
        "pipe.scheduler = DPMSolverMultistepScheduler.from_config(pipe.scheduler.config)\n",
        "# 使用する計算機を設定(GPUがない場合は\"cpu\"に変更) \n",
        "pipe = pipe.to(device)\n",
        "# \"\\033[32m\" は緑色に変更するための\"ANSI Escape Code\"であり、\"0\\033[0m\"はデフォルトの文字色に戻すためのコードです。\n",
        "print(\"\\033[32m画像生成の準備が出来たので、手順3に移ってください。\\033[0m\")   \n",
        "print(\"\\033[32m(Now that the image generation is ready, please proceed to step 3.)\\033[0m\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xXSW3nl8UT7x",
        "cellView": "form"
      },
      "outputs": [],
      "source": [
        "# @markdown #3.このコードを実行してください(3. Please run this code.)\n",
        "# @markdown >生成したい枚数を入力してください　(Please enter the number of images you want to generate here.)\n",
        "生成する枚数 = 2 #@param [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"99\"] {type:\"raw\", allow-input: true}\n",
        "if 生成する枚数 <= 0 or isinstance(生成する枚数, float): \n",
        "    print(\"\\033[31m警告:無効な数字が入力された為デフォルトの1枚に設定しました\\033[0m\") \n",
        "    生成する枚数 = 1 \n",
        "if 生成する枚数 is None: \n",
        "    print(\"\\033[31m警告:無効な形式な為デフォルトの1枚に設定しました\\033[0m\") \n",
        "    生成する枚数 = 1 \n",
        "\n",
        "# @markdown  デフォルトでは1回につき1枚生成します。(By default, one image will be generated per run.)\n",
        "\n",
        "# @markdown ------\n",
        "\n",
        "# @markdown  >生成する画像の条件を**英語で**入力してください　(Please input the conditions for generating images in **English**.)\n",
        "\n",
        "Prompt = \"A beautiful image of Mount Fuji.\" #@param {type:\"string\"}\n",
        "\n",
        "# @markdown 例、\"Earth, space, high resolution\" や \"Please draw a beautiful Mount Fuji with the sun rising from the summit.\"、\"cute, cat\" \n",
        "\n",
        "# @markdown ------\n",
        "\n",
        "# @markdown >必要であればネガティブプロンプトを入力してください。人物を生成するときにおすすめです\n",
        "\n",
        "# @markdown (If necessary, please enter a negative prompt. It is recommended for generating characters.)\n",
        "\n",
        "N_prompt = \"\"  # @param {type:\"string\"}\n",
        "# @markdown ネガティブプロンプトとは、**ネガティブな要素を除く**ものです。 例、low quality、unbeautiful.\n",
        "\n",
        "# @markdown (Negative prompts are used to exclude negative elements from an image. For example, you can use a negative prompt to exclude low quality images or images that are not beautiful.)\n",
        "\n",
        "# @markdown ------\n",
        "\n",
        "# @markdown >生成した画像の保存先を指定したい場合パスを入力してください\n",
        "\n",
        "# @markdown (If you would like to specify a location to save the generated image, please enter the path.)\n",
        "\n",
        "保存する先のパス = \"\"  # @param {type:\"string\"} \n",
        "# @markdown  入力しなければ \"/content/生成した画像\" に保存されます。なければ作るようになっています。\n",
        "\n",
        "#@markdown (If no path is specified, the images will be saved to \"/content/生成した画像\". The directory will be created if it doesn't exist.)\n",
        "\n",
        "# @markdown\n",
        "\n",
        "# @markdown 補足.\"/content/生成した画像\"は左のタスクバーにあるファイルのマークを押すと\"生成した画像\"のフォルダを見れます\n",
        " \n",
        "# @markdown (P.S.You can see the images generated at '/content/生成した画像' by clicking the file icon in the left taskbar.)\n",
        "\n",
        "# @markdown ------\n",
        "\n",
        "雰囲気の落ち着き = 0.8  # @param {type:\"number\"}\n",
        "温度 = 0.6  # @param {type:\"number\"}\n",
        "拡散ステップ = 100  # @param {type:\"number\"}\n",
        "縦の解像度 = \"1080\" #@param [\"480\", \"720\", \"1080\", \"1440\", \"1920\", \"3840\", \"7680\"]\n",
        "横の解像度 = \"1080\" #@param [\"480\", \"720\", \"1080\", \"1440\", \"1920\", \"3840\", \"7680\"]\n",
        "height = int(縦の解像度)\n",
        "width = int(横の解像度)\n",
        "\n",
        "# @markdown  truncation＝雰囲気の落ち着き 0.7くらい\n",
        "\n",
        "#@markdown temperature＝温度 0.6くらい  どのくらい条件に合わせるのか\n",
        "\n",
        "#@markdown diffusion_steps＝拡散ステップ 100くらい\n",
        "\n",
        "\n",
        "# @markdown ------\n",
        "\n",
        "# @markdown #  オプション(Options) \n",
        "\n",
        "# @markdown > 生成した画像をGoogleドライブに保存したいときにチェックを入れてください             \n",
        "\n",
        "# @markdown (Check this box to save the generated image to Google Drive.)\n",
        "\n",
        "# @markdown\n",
        "\n",
        "Googleドライブに接続 = False  # @param {type:\"boolean\"} \n",
        "if Googleドライブに接続: \n",
        "    from google.colab import drive \n",
        "    drive.mount('/content/drive') \n",
        "# @markdown  **チェックをつけると接続に必要な権限を求めるようになります** \n",
        "\n",
        "# @markdown (Checking this box will prompt you for the necessary permissions to connect.)\n",
        "\n",
        "# @markdown\n",
        "\n",
        "# @markdown #**エラーが起きたら1.を再実行して下さい**\n",
        " \n",
        "# @markdown #(If an error occurs, please try step 1 again.)\n",
        "\n",
        "# @markdown (なおこの画像生成は \"stable diffusion-ver.2\" を使用しています)\n",
        "\n",
        "# @markdown (Please note that this image generation uses \"stable diffusion-ver.2\".)\n",
        "\n",
        "# ユーザーが入力した文字列を取得する\n",
        "\n",
        "if not Prompt:\n",
        "  print(\"\\033[1m\\033[31m条件の入力がないため一時停止します\\033[0m\")\n",
        "  Prompt = input(\"入力した後Enterを押すと再開します。\")\n",
        "\n",
        "\n",
        "def generate_images():\n",
        "    if N_prompt == \"\":\n",
        "       prompt = Prompt\n",
        "    else:\n",
        "       prompt = Prompt + f\" but not {N_prompt}\"   \n",
        "      \n",
        "  \n",
        "    params = {\n",
        "        \"truncation\": 雰囲気の落ち着き, # トランクリーション0.7\n",
        "        \"temperature\": 温度, # 温度0.6\n",
        "        \"diffusion_steps\": 拡散ステップ, # 拡散ステップ100 \n",
        "      \n",
        "    }   \n",
        "\n",
        "    num_images = 生成する枚数\n",
        "    for i in range(num_images): \n",
        "    # ユーザーからの最新入力を使用して画像生成(字下げに注意1文字あける) \n",
        "      image = pipe(prompt, height, width).images[0]\n",
        "       # イメージを表示\n",
        "      image.show()\n",
        "      date = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n",
        "      if 保存する先のパス:\n",
        "         if not os.path.exists(保存する先のパス):\n",
        "          os.makedirs(保存する先のパス)\n",
        "         path = os.path.join(保存する先のパス, date + \".png\")\n",
        "         image.save(path)\n",
        "      else:\n",
        "         path = os.path.join('/content/', '生成した画像', date + \".png\")\n",
        "         if not os.path.exists('/content/生成した画像'):\n",
        "          os.makedirs('/content/生成した画像')\n",
        "         path = os.path.join('/content/', '生成した画像', date + \".png\")\n",
        "         image.save(path)\n",
        "\n",
        "\n",
        "generate_images()\n",
        "print(\"画像生成できました。\")\n",
        "print(\"*保存先を指定していない場合以下の方法で見れます*\"\n",
        "      \"左のバー＞生成した画像\"\n",
        "     )"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MJXQRW_E3AsI"
      },
      "source": [
        "#**Readme**(日本語版)\n",
        "#利用規約\n",
        "\n",
        "本画像生成ノーブックを使用するにあたって、利用規約の内容に全て同意したとみなします。\n",
        "\n",
        "重要な注意点：\n",
        "**商用利用はご遠慮ください。**\n",
        "**画像生成によって起こった問題について、私は一切責任を負いません。**\n",
        "\n",
        "免責事項:\n",
        "*  使用にあたっては、自己責任でお願いします。\n",
        "*  本モデルは予告なく変更・非公開・削除する可能性があります。\n",
        "*  利用規約は予告なく変更する場合があります。\n",
        "*  このモデルは、趣味で作成したものであり、商用利用などは意図していません。\n",
        "*  使用にあたって発生した通信量、電気料金など金銭に関わるものの負担は追い兼ねます\n",
        "*  Stable Diffusion-Ver2.1やその他の追加ライブラリに関する規約がある場合は、それらも確認することを強くお勧めします。\n",
        "*  本プロジェクトを利用することにより生じた一切の問題について、私は一切責任を負いません。\n",
        "\n",
        "ー本プロジェクトとは、本画像生成ノートブックや、githubのページなどをさします\n",
        "___\n",
        "#本プロジェクトの説明\n",
        "Stable Diffusion-Ver2.1をベースにした画像生成ノートブックです。\n",
        "\n",
        "**使用させていただいたツール**\n",
        "※2023/5/12時点\n",
        "\n",
        "-Stable Diffusion-ver2.1\n",
        "\n",
        "-CLIP\n",
        "\n",
        "使用させていただいたライブラリ\n",
        "- Stable Diffusion-ver2.1\n",
        "- CLIP\n",
        "- tqdm\n",
        "- ftfy\n",
        "- scipy\n",
        "- regex\n",
        "- torch \n",
        "- diffusers \n",
        "- accelerate\n",
        "- safetensors\n",
        "- transformers\n",
        "  \n",
        "---\n",
        "\n",
        "謝辞\n",
        "\n",
        "本画像生成ノートブックの作成にあたり、オープンソースのリソースやフリーのツールを使用させていただきました。個人的な利用でしたが、これらのリソースやツールがあったからこそ、本プロジェクトを実現することができました。\n",
        "この場を借りて、オープンソースのコミュニティや、フリーのツールを提供してくださった方々に感謝の意を表します。素晴らしいツールや技術を提供してくださり、本プロジェクトを支援してくださったことに心から感謝いたします。\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XKISm_HGOcgG"
      },
      "source": [
        "#**Readme(English_ver)**\n",
        "# Terms of Use\n",
        "\n",
        "By using this image generation notebook, you agree to all the contents of the Terms of Use.\n",
        "\n",
        "Important Notice:\n",
        "**Please refrain from using for commercial purposes.**\n",
        "**I am not responsible for any problems caused by image generation.**\n",
        "\n",
        "Disclaimer:\n",
        "* Please use it at your own risk.\n",
        "* This model may be changed, unpublished, or deleted without notice.\n",
        "* The terms of use may be changed without notice.\n",
        "* This model is created for personal use and is not intended for commercial use.\n",
        "* I will not be responsible for any financial costs incurred, such as communication costs and electricity costs, incurred during use.\n",
        "* If there are terms and conditions for Stable Diffusion-Ver2.1 and other additional libraries, it is strongly recommended to confirm them as well.\n",
        "* I am not responsible for any problems caused by using this project.\n",
        "\n",
        "ー This project refers to the image generation notebook and GitHub pages.\n",
        "\n",
        "---\n",
        "\n",
        "# Description of this project\n",
        "\n",
        "This is an image generation notebook based on Stable Diffusion-Ver2.1.\n",
        "\n",
        "**Tools used**\n",
        "* As of 2023/5/12\n",
        "\n",
        "- Stable Diffusion-ver2.1\n",
        "- CLIP\n",
        "\n",
        "**Libraries used**\n",
        "- Stable Diffusion-ver2.1\n",
        "- CLIP\n",
        "- tqdm\n",
        "- ftfy\n",
        "- scipy\n",
        "- regex\n",
        "- torch \n",
        "- diffusers \n",
        "- accelerate\n",
        "- safetensors\n",
        "- transformers\n",
        "\n",
        "---\n",
        "\n",
        "# Acknowledgements\n",
        "\n",
        "I used open source resources and free tools to create this image generation notebook. Although it was for personal use, it was only possible to realize this project because of these resources and tools.\n",
        "I would like to express my gratitude to the open source community and those who provide free tools. I sincerely appreciate your support for this project by providing great tools and technologies. \n"
      ]
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "gpuClass": "standard",
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}